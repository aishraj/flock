[package]
name = "flock"
version = "0.1.0"
authors = ["Nshen <nshen121@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
cfg-if = "1.0.0"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
js-sys = "0.3.59"
serde = { version = "1.0", features = ["derive"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
web-sys = {version = "0.3", features = ["console"]}

# [dependencies.web-sys]
# version = "0.3"
# features = ["console"]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# opt-level = 'z'  # 更激进
lto = true # This gives LLVM many more opportunities to inline and prune functions. Not only will it make the .wasm smaller, but it will also make it faster at runtime!

[features]
# default = ["console_error_panic_hook" ,"wee_alloc"]
default = ["console_error_panic_hook" , "wee_alloc"]
